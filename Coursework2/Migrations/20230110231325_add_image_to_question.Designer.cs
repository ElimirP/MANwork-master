// <auto-generated />
using System;
using MANwork.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MANwork.Migrations
{
    [DbContext(typeof(AppDbContent))]
    [Migration("20230110231325_add_image_to_question")]
    partial class add_image_to_question
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Coursework2.Data.Models.ClientSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSession")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUser")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdSession");

                    b.HasIndex("IdUser");

                    b.ToTable("ClientSession");
                });

            modelBuilder.Entity("Coursework2.Data.Models.CurrentAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<int>("Credited")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCurrentQuestion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSession")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUsers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdCurrentQuestion");

                    b.HasIndex("IdSession");

                    b.HasIndex("IdUsers");

                    b.ToTable("CurrentAnswer");
                });

            modelBuilder.Entity("Coursework2.Data.Models.CurrentQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndQuestion")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdQuestion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSession")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Question")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartQuestion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdQuestion");

                    b.HasIndex("IdSession");

                    b.ToTable("CurrentQuestion");
                });

            modelBuilder.Entity("Coursework2.Data.Models.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdLeading")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPackageQuestions")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameOfGame")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdLeading");

                    b.HasIndex("IdPackageQuestions");

                    b.ToTable("GameSession");
                });

            modelBuilder.Entity("Coursework2.Data.Models.Leading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Leading");
                });

            modelBuilder.Entity("Coursework2.Data.Models.PackageOfQuestions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageEditor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PackageOfQuestions");
                });

            modelBuilder.Entity("Coursework2.Data.Models.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdImage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPackage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuestionText")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdImage");

                    b.HasIndex("IdPackage");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Coursework2.Data.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MANwork.Data.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("image")
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Coursework2.Data.Models.ClientSession", b =>
                {
                    b.HasOne("Coursework2.Data.Models.GameSession", "GameSession")
                        .WithMany()
                        .HasForeignKey("IdSession")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coursework2.Data.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Coursework2.Data.Models.CurrentAnswer", b =>
                {
                    b.HasOne("Coursework2.Data.Models.CurrentQuestion", "CurrentQuestion")
                        .WithMany()
                        .HasForeignKey("IdCurrentQuestion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coursework2.Data.Models.GameSession", "GameSession")
                        .WithMany()
                        .HasForeignKey("IdSession")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coursework2.Data.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("IdUsers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentQuestion");

                    b.Navigation("GameSession");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Coursework2.Data.Models.CurrentQuestion", b =>
                {
                    b.HasOne("Coursework2.Data.Models.Questions", "Questions")
                        .WithMany()
                        .HasForeignKey("IdQuestion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coursework2.Data.Models.GameSession", "GameSession")
                        .WithMany()
                        .HasForeignKey("IdSession")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Coursework2.Data.Models.GameSession", b =>
                {
                    b.HasOne("Coursework2.Data.Models.Leading", "Leading")
                        .WithMany()
                        .HasForeignKey("IdLeading")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coursework2.Data.Models.PackageOfQuestions", "PackageOfQuestions")
                        .WithMany()
                        .HasForeignKey("IdPackageQuestions")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leading");

                    b.Navigation("PackageOfQuestions");
                });

            modelBuilder.Entity("Coursework2.Data.Models.Questions", b =>
                {
                    b.HasOne("MANwork.Data.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("IdImage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coursework2.Data.Models.PackageOfQuestions", "PackageOfQuestions")
                        .WithMany()
                        .HasForeignKey("IdPackage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("PackageOfQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
